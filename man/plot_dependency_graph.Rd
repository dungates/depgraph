% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_dependency_graph.R
\name{plot_dependency_graph}
\alias{plot_dependency_graph}
\title{Plot network of package dependencies}
\usage{
plot_dependency_graph(pkg = ".", suggests = FALSE, option = "cividis", ...)
}
\arguments{
\item{pkg}{package description, can be path or package name. See
\code{\link[devtools]{as.package}} for more information.}

\item{suggests}{If TRUE, retrieves Suggests dependencies (non-recursively)}

\item{option}{A character string indicating the color map option to use.
Eight options are available:
\itemize{
\item \code{"magma"} (or \code{"A"})
\item \code{"inferno"} (or \code{"B"})
\item \code{"plasma"} (or \code{"C"})
\item \code{"viridis"} (or \code{"D"})
\item \code{"cividis"} (or \code{"E"})
\item \code{"rocket"} (or \code{"F"})
\item \code{"mako"} (or \code{"G"})
\item \code{"turbo"} (or \code{"H"})
}}

\item{...}{
  Arguments passed on to \code{\link[miniCRAN:makeDepGraph]{miniCRAN::makeDepGraph}}
  \describe{
    \item{\code{availPkgs}}{Data frame with an element called \code{package}. The \code{package}
element is a vector of available packages.  Defaults to reading this list
from CRAN, using \code{\link[=available.packages]{available.packages()}}}
    \item{\code{repos}}{URL(s) of the 'contrib' sections of the repositories, e.g.
\code{"https://cran.us.r-project.org"}. Passed to \code{\link[=available.packages]{available.packages()}}}
    \item{\code{type}}{Possible values are (currently) "source", "mac.binary" and
"win.binary": the binary types can be listed and downloaded but not
installed on other platforms.  Passed to \code{\link[=download.packages]{download.packages()}}.}
    \item{\code{enhances}}{If TRUE, retrieves Enhances dependencies (non-recursively)}
    \item{\code{includeBasePkgs}}{If TRUE, include base R packages in results}
  }}
}
\description{
Plots the network of package dependencies based on a package
\code{DESCRIPTION} file.
}
\details{
The resulting plot visualizes the network of package dependencies
  with the number of upstream dependencies color coded and the number of
  downstream dependencies size coded.
}
